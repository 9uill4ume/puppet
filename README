java jdk7 JAVA SE 6/7 puppet module, install java on win/ux servers 

weblogic puppet module
  installs weblogic
  configure + starts nodemanager
  domain creation normal and OSB
  start the AdminServer for configuration 
  apply bsu patch
  install OSB 

ToDo: total weblogic configuration. Deployments 

#  java jdk7 JAVA SE 6/7 puppet module 
# installs jdk on linux based systems and window with 64 or 32 bits
# just add the jdk 6 or 7 files like jdk-6u35-linux-x64-rpm.bin, jdk-7u7-linux-x64.rpm, 
# jdk-7u7-windows-i586.exe or jdk-7u7-windows-x64.exe downloaded from Oracle website to 
# the files folder of jdk7 module
#
 
# weblogic puppet module 
# installs weblogic on linux window based systems with 64 or 32 bits JDK
# just add the weblogic generic jar to the files folder of the wls module
# use it like this in site.pp
#

# site.pp
#
 
import "templates"
import "nodes"

$defaultJDK     = '7u7'
$defaultFullJDK = 'jdk1.7.0_07'


# nodes.pp
#

node default {
}

node basenode {
}

node devel inherits basenode {
  $my_zone = "devel"
  include wls12
  include wls1036osb
}

node prod inherits basenode {
  $my_zone = "prod"
}

node 'devagent1.alfa.local' inherits devel {
  include  wls1036osb
}

node 'win7user.localdomain' inherits prod  {

  include wls1036
  include wls12

} 

# templates.pp
#

include jdk7
include wls


class wls12{


  jdk7::install7{'jdk7':
    version => $defaultJDK,
    x64     => "true",
  }
  
  case $operatingsystem {
     centos, redhat, OracleLinux, ubuntu, debian: { 
       $osMdwHome    = "/opt/oracle/wls/wls12c"
       $osWlHome     = "/opt/oracle/wls/wls12c/wlserver_12.1"
       $osTemplate   = "standard"
       $osDomainPath = "/opt/oracle/wls/wls12c/admin"
       $user         = "oracle"
       $group        = "dba"
     }
     windows: { 
       $osMdwHome    = "c:/oracle/wls/wls12c"
       $osWlHome     = "c:/oracle/wls/wls12c/wlserver_12.1"
       $osTemplate   = "standard"
       $osDomainPath = "c:/oracle/wls/wls12c/admin"
       $user         = "Administrator"
       $group        = "Administrators"
       $serviceName  = "C_oracle_wls_wls12c_wlserver_12.1"
     }
  }

  # set the defaults
  Wls::Installwls {
    version      => '1211',
    versionJdk   => $defaultJDK,
    user         => $user,
    group        => $group,    
  }
  Wls::Wlsdomain {
    wlHome       => $osWlHome,
    mdwHome      => $osMdwHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,    
  }
  Wls::Nodemanager {
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,
    serviceName  => $serviceName,  
  }
  
  # install
  wls::installwls{'wls12c':
    require      => Jdk7::Install7['jdk7'],
  }

  wls::wlsdomain{
  
    'testDomain':
    wlsTemplate  => $osTemplate,
    domain       => 'myTestDomain',
    domainPath   => $osDomainPath,
    require      => Wls::Installwls['wls12c'];

    'testDomain2':
    wlsTemplate     => $osTemplate,
    domain          => 'myTestDomain2',
    domainPath      => $osDomainPath,
    adminListenPort => '8001',
    require         => Wls::Installwls['wls12c'];
    
  }

  #nodemanager configuration and starting
  wls::nodemanager{'nodemanager':
    require      => [Wls::Wlsdomain['testDomain'],Wls::Wlsdomain['testDomain2']],
  }

  # default parameters for the wlst scripts
  Wls::Wlstexec {
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,
    address      => "localhost",
    wlsUser      => "weblogic",
    password     => "weblogic1",
  }
  
  # start AdminServers for configuration of both domains myTestDomain
  wls::wlstexec { 
  
    'startAdminServer':
     script      => 'startWlsServer.py',
     port        => '5556',
     params      =>  ["domain = 'myTestDomain'",
                      "domainPath = '${osDomainPath}/myTestDomain'",
                      "wlsServer = 'AdminServer'"],
     require     => Wls::Nodemanager['nodemanager'];

    'startAdminServer2':
     script      => 'startWlsServer.py',
     port        => '5556',
     params      =>  ["domain = 'myTestDomain2'",
                      "domainPath = '${osDomainPath}/myTestDomain2'",
                      "wlsServer = 'AdminServer'"],
     require     => Wls::Nodemanager['nodemanager'];

  }

}


class wls1036osb{

  jdk7::install7{'jdk7_2':
    version => $defaultJDK,
    x64     => "true",
  }
 
  case $operatingsystem {
     centos, redhat, OracleLinux, ubuntu, debian: { 
       $osMdwHome    = "/opt/oracle/wls/wls11g"
       $osWlHome     = "/opt/oracle/wls/wls11g/wlserver_10.3"
       $osTemplate   = "osb"
       $osDomainPath = "/opt/oracle/wls/wls11g/admin"
       $user         = "oracle"
       $group        = "dba"
     }
     windows: { 
       $osMdwHome    = "c:/opt/oracle/wls/wls11g"
       $osWlHome     = "c:/oracle/wls/wls11g/wlserver_10.3"
       $osTemplate   = "osb"
       $osDomainPath = "c:/oracle/wls/wls11g/admin"
       $user         = "Administrator"
       $group        = "Administrators"
       $serviceName  = "C_oracle_wls_wls11g_wlserver_10.3"
     }
  }

  # set the defaults
  Wls::Installwls {
    version      => '1036',
    versionJdk   => $defaultJDK,
    user         => $user,
    group        => $group,    
  }

  Wls::Installosb {
    mdwHome      => $osMdwHome,
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,    
  }

  Wls::Wlsdomain {
    wlHome       => $osWlHome,
    mdwHome      => $osMdwHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,    
  }
  
  Wls::Nodemanager {
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,
    serviceName  => $serviceName,  
  }
  

  # install
  wls::installwls{'11gPS5':
    require      => Jdk7::Install7['jdk7_2'],
  }

  wls::installosb{'osbPS5':
    osbFile      => 'ofm_osb_generic_11.1.1.6.0_disk1_1of1.zip',
    require      => Wls::Installwls['11gPS5'],
  }

  wls::bsupatch{'p13573621':
    mdwHome      => $osMdwHome ,
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,
    patchId      => 'KZKQ',	
    patchFile    => 'p13573621_1036_Generic.zip',	
    user         => $user,
    group        => $group, 
    require      => Wls::Installosb['osbPS5'],
  }

  # install OSB domain
  wls::wlsdomain{
  
    'osbDomain':
    wlsTemplate     => $osTemplate,
    domain          => 'osbDomain',
    domainPath      => $osDomainPath,
    adminListenPort => '9001',
    require         => Wls::Installosb['osbPS5'];
    
  }

  #nodemanager configuration and starting
  wls::nodemanager{'nodemanager11g':
    listenPort  => '5656',
    require     => Wls::Installwls['11gPS5'],
  }

  # default parameters for the wlst scripts
  Wls::Wlstexec {
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,
    address      => "localhost",
    wlsUser      => "weblogic",
    password     => "weblogic1",
  }
  
  # start AdminServers for configuration of both domains myTestDomain
  wls::wlstexec { 
  
    'startOSBAdminServer':
     script      => 'startWlsServer.py',
     port        => '5656',
     params      =>  ["domain = 'osbDomain'",
                      "domainPath = '${osDomainPath}/osbDomain'",
                      "wlsServer = 'AdminServer'"],
     require     => Wls::Nodemanager['nodemanager11g'];

  }


}
 