java jdk7 JAVA SE 6/7 puppet module, install java on win/ux servers 

weblogic puppet module, installs weblogic,configure + starts nodemanager, domain creation
starts the AdminServer for configuration 
ToDo: total weblogic configuration. Deployments 

#  java jdk7 JAVA SE 6/7 puppet module 
# installs jdk on linux based systems and window with 64 or 32 bits
# just add the jdk 6 or 7 files like jdk-6u35-linux-x64-rpm.bin, jdk-7u7-linux-x64.rpm, 
# jdk-7u7-windows-i586.exe or jdk-7u7-windows-x64.exe downloaded from Oracle website to 
# the files folder of jdk7 module
#
 
# weblogic puppet module 
# installs weblogic on linux window based systems with 64 or 32 bits JDK
# just add the weblogic generic jar to the files folder of the wls module
# use it like this in site.pp
#
# create a weblogic domain, Configure & Runs NodeManager 

# site.pp
#
 
import "templates"
import "nodes"

$defaultJDK     = '7u7'
$defaultFullJDK = 'jdk1.7.0_07'


# nodes.pp
#

node default {
}

node basenode {
}

node devel inherits basenode {
  $my_zone = "devel"
  include wls12
}

node prod inherits basenode {
  $my_zone = "prod"
}

node 'devagent1.alfa.local' inherits devel {
}

node 'win7user.localdomain' inherits prod  {

  include wls1036
  include wls12

} 

# templates.pp
#

include jdk7
include wls

class wls12{


  jdk7::install7{'jdk7':
    version => $defaultJDK,
    x64     => "true",
  }
  
  case $operatingsystem {
     centos, redhat, OracleLinux, ubuntu, debian: { 
       $osWlHome     = "/opt/oracle/wls/wls12c/wlserver_12.1"
       $osTemplate   = "/common/templates/domains/wls.jar"
       $osDomainPath = "/opt/oracle/wls/wls12c/admin"
       $user         = "oracle"
       $group        = "dba"
     }
     windows: { 
       $osWlHome     = "c:/oracle/wls/wls12c/wlserver_12.1"
       $osTemplate   = "/common/templates/domains/wls.jar"
       $osDomainPath = "c:/oracle/wls/wls12c/admin"
       $user         = "Administrator"
       $group        = "Administrators"
       $serviceName  = "C_oracle_wls_wls12c_wlserver_12.1"
     }
  }

  # set the defaults
  Wls::Installwls {
    version      => '1211',
    versionJdk   => $defaultJDK,
    user         => $user,
    group        => $group,    
  }
  Wls::Wlsdomain {
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,    
  }
  Wls::Nodemanager {
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,
    serviceName  => $serviceName,  
  }
  
  # install
  wls::installwls{'wls12c':
    require      => Jdk7::Install7['jdk7'],
  }

  wls::wlsdomain{
  
    'testDomain':
    template     => $osTemplate,
    domain       => 'myTestDomain',
    domainPath   => $osDomainPath,
    require      => Wls::Installwls['wls12c'];

    'testDomain2':
    template        => $osTemplate,
    domain          => 'myTestDomain2',
    domainPath      => $osDomainPath,
    adminListenPort => '8001',
    require         => Wls::Installwls['wls12c'];
    
  }

  #nodemanager configuration and starting
  wls::nodemanager{'nodemanager':
    require      => [Wls::Wlsdomain['testDomain'],Wls::Wlsdomain['testDomain2']],
  }

  # default parameters for the wlst scripts
  Wls::Wlstexec {
    wlHome       => $osWlHome,
    fullJDKName  => $defaultFullJDK,	
    user         => $user,
    group        => $group,
    address      => "localhost",
    wlsUser      => "weblogic",
    password     => "weblogic1",
  }
  
  # start AdminServers for configuration of both domains myTestDomain
  wls::wlstexec { 
  
    'startAdminServer':
     id          => 'unique1',
     script      => 'startWlsServer.py',
     port        => '5556',
     params      =>  ["domain = 'myTestDomain'",
                      "domainPath = '${osDomainPath}/myTestDomain'",
                      "wlsServer = 'AdminServer'"],
     require     => Wls::Nodemanager['nodemanager'];

    'startAdminServer2':
     id          => 'unique2',
     script      => 'startWlsServer.py',
     port        => '5556',
     params      =>  ["domain = 'myTestDomain2'",
                      "domainPath = '${osDomainPath}/myTestDomain2'",
                      "wlsServer = 'AdminServer'"],
     require     => Wls::Nodemanager['nodemanager'];

  }

}

class wls1036{

  jdk7::install7{'jdk6':
    version => "6u35",
    x64     => "true",
  }

  case $operatingsystem {
     centos, redhat, OracleLinux, ubuntu, debian: { 
       $user         = "oracle"
       $group        = "dba"
     }
     windows: { 
       $user         = "Administrator"
       $group        = "Administrators"
     }
  }

  wls::installwls{'11gPS5':
    version    => '1036',
    versionJdk => '6u35',
    user       => $user,
    group      => $group,    
    require    => Jdk7::Install7['jdk6'],
  }
}
 
